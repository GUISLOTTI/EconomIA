
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { CommonModule } from '@angular/common';
import { RouterModule } from '@angular/router';

interface MenuItem {
  id: string;
  label: string;
  icon: string;
  badge?: string;
}

@Component({
  selector: 'app-sidebar',
  standalone: true,
  imports: [CommonModule, RouterModule],
  templateUrl: './sidebar.component.html',
  styleUrls: ['./sidebar.component.css']
})
export class SidebarComponent {
  @Input() currentSection = 'dashboard';
  @Output() sectionChange = new EventEmitter<string>();
  @Output() sidebarToggle = new EventEmitter<boolean>();

  isCollapsed = false;

  menuItems: MenuItem[] = [
    { id: 'dashboard', label: 'Dashboard', icon: 'üè†' },
    { id: 'receitas', label: 'Receitas', icon: 'üí∞', badge: '+' },
    { id: 'despesas', label: 'Despesas', icon: 'üí∏', badge: '-' },
    { id: 'relatorios', label: 'Relat√≥rios', icon: 'üìä' },
    { id: 'metas', label: 'Metas', icon: 'üéØ' },
    { id: 'configuracoes', label: 'Configura√ß√µes', icon: '‚öôÔ∏è' },
    { id: 'termos', label: 'Termos de Uso', icon: 'üìÑ' },
    { id: 'sair', label: 'Sair', icon: 'üö™' }
  ];

  toggleSidebar() {
    this.isCollapsed = !this.isCollapsed;
    this.sidebarToggle.emit(this.isCollapsed);
  }

  selectSection(sectionId: string) {
    this.sectionChange.emit(sectionId);
  }

  getSectionTitle(sectionId: string): string {
    const sectionTitles: { [key: string]: string } = {
      'dashboard': 'Dashboard',
      'receitas': 'Receitas',
      'despesas': 'Despesas',
      'relatorios': 'Relat√≥rios',
      'metas': 'Metas Financeiras',
      'configuracoes': 'Configura√ß√µes',
      'termos': 'Termos de Uso'
    };
    return sectionTitles[sectionId] || 'Dashboard';
  }

  getSectionIcon(sectionId: string): string {
    const item = this.menuItems.find(item => item.id === sectionId);
    return item?.icon || 'üè†';
  }

  getSectionFeatures(sectionId: string): string[] {
    const features: { [key: string]: string[] } = {
      'receitas': [
        'Cadastro de receitas fixas e vari√°veis',
        'Categoriza√ß√£o autom√°tica',
        'Hist√≥rico completo de recebimentos',
        'Previs√£o de receitas futuras'
      ],
      'despesas': [
        'Controle de gastos por categoria',
        'Alertas de limite de gastos',
        'An√°lise de padr√µes de consumo',
        'Comparativo mensal de despesas'
      ],
      'relatorios': [
        'Gr√°ficos interativos de receitas x despesas',
        'Relat√≥rios mensais e anuais',
        'Exporta√ß√£o para PDF e Excel',
        'An√°lise de tend√™ncias financeiras'
      ],
      'metas': [
        'Defini√ß√£o de metas de economia',
        'Acompanhamento de progresso',
        'Alertas de aproxima√ß√£o das metas',
        'Sugest√µes de otimiza√ß√£o'
      ],
      'configuracoes': [
        'Personaliza√ß√£o de categorias',
        'Configura√ß√£o de notifica√ß√µes',
        'Backup autom√°tico de dados',
        'Prefer√™ncias de visualiza√ß√£o'
      ],
      'termos': [
        'Termos de uso atualizados',
        'Pol√≠tica de privacidade',
        'Direitos e responsabilidades',
        'Informa√ß√µes sobre cookies'
      ]
    };
    return features[sectionId] || [];
  }
}
